{"version":3,"sources":["Components/Authentication/Signup.js","Components/CustomCircularProgress.js","Components/Authentication/Signin.js","Components/Dashboard/listItems.js","Components/Authentication/Logout.js","Components/Dashboard/Users.js","Components/Dashboard/Categories.js","Components/Dashboard/Tasks.js","Components/Dashboard/Chart.js","Components/Dashboard/AddCategory.js","Components/Dashboard/EditCategory.js","Components/Dashboard/AddTask.js","Components/Dashboard/EditTask.js","Components/Dashboard/Dashboard.js","App.js","serviceWorker.js","Components/Authentication/firebaseConfig.js","index.js"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignUp","classes","useState","loading","setLoading","fullname","email","password","error","user","setUser","handleChange","e","target","name","value","firebase","useFirebaseApp","CircularProgress","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","onSubmit","preventDefault","auth","createUserWithEmailAndPassword","then","result","updateProfile","displayName","signOut","catch","message","Grid","container","item","xs","TextField","autoComplete","required","fullWidth","id","label","autoFocus","onChange","type","Button","color","justify","to","Box","mt","createStyles","root","position","left","top","transform","button","placeholder","height","CustomCircularProgress","SignIn","signInWithEmailAndPassword","href","MainListItems","categoriesList","setCategoriesList","open","setOpen","fetchCategories","a","functions","httpsCallable","response","console","log","data","useEffect","ListItem","Link","ListItemIcon","ListItemText","primary","onClick","Collapse","in","timeout","unmountOnExit","List","disablePadding","style","paddingLeft","map","category","key","Logout","seeMore","Users","numberOfUsers","location","useLocation","usersList","setUsersList","fetchUsers","firefunction","Fragment","Table","size","TableHead","TableRow","TableCell","TableBody","length","slice","Math","max","uid","metadata","lastSignInTime","creationTime","pathname","RouterLink","Categories","isLoading","setIsLoading","selection","setSelection","history","useHistory","deleteDialogOpen","setDeleteDialogOpen","isDeleting","setIsDeleting","handleDeleteDialogView","deleteCategories","categoryId","flexGrow","IconButton","RemoveCircleOutline","push","disableSelectionOnClick","rows","columns","field","headerName","pageSize","checkboxSelection","onSelectionChange","newSelection","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Tasks","useParams","categoryName","tasksList","setTasksList","taskName","setTaskName","taskId","setTaskId","deleteTask","fetchTasks","task","Accordion","AccordionSummary","expandIcon","aria-controls","heading","AccordionDetails","description","Divider","AccordionActions","createData","time","amount","undefined","Chart","useTheme","right","bottom","dataKey","stroke","text","angle","textAnchor","fill","dot","AddCategory","setCategoryName","alert","setAlert","addCategory","Alert","severity","pt","startIcon","EditCategory","newCategoryName","setNewCategoryName","editCategory","taskDescription","setTaskDescription","addTask","EditTask","newTaskName","setNewTaskName","newTaskDescription","setNewTaskDescription","editTask","getTask","toolbar","paddingRight","toolbarIcon","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","overflow","paddingTop","paddingBottom","fixedHeight","Dashboard","handleDrawer","AppBar","clsx","Toolbar","edge","aria-label","noWrap","Badge","badgeContent","Drawer","exact","path","Paper","AddTask","App","fallback","Boolean","window","hostname","match","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.07d59244.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useFirebaseApp } from 'reactfire';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignUp() {\r\n    const classes = useStyles();\r\n\r\n    // Loading State\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    // User State\r\n    const [user, setUser] = useState({\r\n        fullname: '',\r\n        email: '',\r\n        password: '',\r\n        error: '',\r\n    });\r\n    // onChange function\r\n    const handleChange = e => {\r\n        setUser({\r\n            ...user,\r\n            [e.target.name]: e.target.value,\r\n            error: '',\r\n        })\r\n    };\r\n\r\n    // Import firebase\r\n    const firebase = useFirebaseApp();\r\n\r\n    // Submit function (Create account)\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n    //setLoading to true\r\n    setLoading(true);\r\n    // Sign up code here.\r\n    firebase.auth().createUserWithEmailAndPassword(user.email, user.password)\r\n        .then(result => {\r\n            // Update the nickname\r\n            result.user.updateProfile({\r\n                displayName: user.fullname,\r\n            });\r\n            setLoading(false);\r\n\r\n\r\n\r\n\r\n            // Sign Out the user.\r\n            firebase.auth().signOut();\r\n        }).catch(error => {\r\n            // Update the error\r\n            setUser({\r\n                ...user,\r\n                error: error.message,\r\n            })\r\n        })\r\n}\r\n\r\nreturn (!loading ?\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n                Sign up\r\n                </Typography>\r\n            <form onSubmit={handleSubmit} className={classes.form} >\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            autoComplete=\"fullname\"\r\n                            name=\"fullname\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"fullname\"\r\n                            label=\"Full Name\"\r\n                            autoFocus\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Grid>\r\n\r\n                </Grid>\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                >\r\n                    Sign Up\r\n                    </Button>\r\n                <Grid container justify=\"flex-end\">\r\n                    <Grid item>\r\n                        <Link to=\"/\" variant=\"body2\">\r\n                            Already have an account? Sign in\r\n                            </Link>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n        <Box mt={5}>\r\n        </Box>\r\n    </Container>\r\n    : <CircularProgress />\r\n);\r\n}","import React from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            position: 'absolute', left: '50%', top: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n\r\n        },\r\n        button: {\r\n            margin: theme.spacing(2),\r\n        },\r\n        placeholder: {\r\n            height: 40,\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function CustomCircularProgress() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.placeholder}>\r\n                <CircularProgress />\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useFirebaseApp } from 'reactfire';\r\nimport CustomCircularProgress from '../CustomCircularProgress'\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function SignIn() {\r\n    const classes = useStyles();\r\n    //Loading State\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    // User State\r\n    const [user, setUser] = useState({\r\n        email: '',\r\n        password: '',\r\n        error: '',\r\n    });\r\n    // onChange function\r\n    const handleChange = e => {\r\n        setUser({\r\n            ...user,\r\n            [e.target.name]: e.target.value,\r\n            error: '',\r\n        })\r\n    };\r\n\r\n    // Import firebase\r\n    const firebase = useFirebaseApp();\r\n\r\n    // Submit function (Log in user)\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        //setLoading to true\r\n        setLoading(true);\r\n        // Log in code here.\r\n        firebase.auth().signInWithEmailAndPassword(user.email, user.password).then(\r\n            setLoading(false),\r\n        )\r\n            .catch(error => {\r\n                // Update the error\r\n                setUser({\r\n                    ...user,\r\n                    error: error.message,\r\n                })\r\n            })\r\n    }\r\n\r\n    return (!loading ?\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n        </Typography>\r\n                <form onSubmit={handleSubmit} className={classes.form} >\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                        onChange={handleChange}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        onChange={handleChange}\r\n                    />\r\n\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                Forgot password?\r\n                            </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Link to=\"/Signup\" variant=\"body2\">\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n            </Box>\r\n\r\n\r\n        </Container>\r\n        : <CustomCircularProgress />\r\n\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport CategoryIcon from '@material-ui/icons/Category';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport SubdirectoryArrowRightIcon from '@material-ui/icons/SubdirectoryArrowRight';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport { Link } from 'react-router-dom'\r\nimport { useFirebaseApp } from 'reactfire';\r\nimport 'firebase/functions';\r\nimport 'firebase/firestore';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const MainListItems = () => {\r\n    const firebase = useFirebaseApp();\r\n    const [categoriesList, setCategoriesList] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const handleClick = () => {\r\n        setOpen(!open)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const fetchCategories = async () => {\r\n\r\n        try {\r\n            await firebase.functions().httpsCallable('getAllCategories')()\r\n                .then(async response => {\r\n                    console.log(response.data);\r\n                    await setCategoriesList(response.data);\r\n                }).catch(e => {\r\n                    console.log(e)\r\n                });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetchCategories();\r\n    }, []);\r\n\r\n    return (\r\n        < div >\r\n            <ListItem button component={Link} to=\"/dashboard\">\r\n                <ListItemIcon>\r\n                    <DashboardIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Dashboard\" />\r\n            </ListItem>\r\n\r\n\r\n            <ListItem button component={Link} to=\"/dashboard/users\" >\r\n                <ListItemIcon>\r\n                    <PeopleIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Users\" />\r\n            </ListItem>\r\n            <ListItem button onClick={handleClick}>\r\n                <ListItemIcon>\r\n                    <CategoryIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Categories\" />\r\n                {open ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItem>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                    <ListItem button style={{ paddingLeft: 32 }} component={Link} to={'/dashboard/Category/Add'}>\r\n                        <ListItemIcon>\r\n                            <AddIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Add Categroy\" />\r\n                    </ListItem>\r\n\r\n                    <ListItem button style={{ paddingLeft: 32 }} component={Link} to='/dashboard/Categories'>\r\n                        <ListItemIcon>\r\n                            <ListIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"View All Categories\" />\r\n                    </ListItem>\r\n\r\n                    {categoriesList.map(category => (\r\n                        <ListItem button key={category.id} style={{ paddingLeft: 32 }} component={Link} to={`/dashboard/Category/${category.name}/${category.id}`} >\r\n                            <ListItemIcon>\r\n                                <SubdirectoryArrowRightIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={category.name} />\r\n                            <ChevronRightIcon />\r\n                        </ListItem>\r\n\r\n                    ))\r\n                    }\r\n\r\n                </List>\r\n            </Collapse>\r\n\r\n            <ListItem button component={Link} to=\"/dashboard/tasks\">\r\n                <ListItemIcon>\r\n                    <AssignmentIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Tasks\" />\r\n            </ListItem>\r\n\r\n        </div >\r\n    )\r\n};\r\n\r\n","import React from 'react';\r\nimport { useFirebaseApp } from 'reactfire';\r\nimport 'firebase/auth';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nconst Logout = () => {\r\n    // Import firebase\r\n    const firebase = useFirebaseApp();\r\n\r\n    // Log out function\r\n    const handleClick = () => {\r\n        firebase.auth().signOut();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ListItem button onClick={handleClick}>\r\n                <ListItemIcon>\r\n                    <ExitToAppIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Logout\" />\r\n            </ListItem>\r\n        </>\r\n    )\r\n};\r\nexport default Logout;","import React, { useState, useEffect } from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom'\r\nimport 'firebase/functions';\r\nimport { useFirebaseApp } from 'reactfire';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    seeMore: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n}));\r\n\r\n\r\nconst Users = ({ numberOfUsers = null }) => {\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n    const [usersList, setUsersList] = useState([]);\r\n    const firebase = useFirebaseApp();\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchUsers = async () => {\r\n            try {\r\n                await firebase.functions().httpsCallable('getAllUsers')()\r\n                    .then(async response => {\r\n                        await setUsersList(response.data);\r\n                    }).catch(e => {\r\n                        console.log(e)\r\n                    });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        };\r\n        const firefunction = async () => {\r\n\r\n            try {\r\n                await firebase.functions().httpsCallable('getAllCategories')()\r\n                    .then(response => {\r\n                        console.log(response.data);\r\n                    }).catch(e => {\r\n                        console.log(e)\r\n                    });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n\r\n        }\r\n\r\n        fetchUsers();\r\n        firefunction();\r\n    }, [firebase]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {numberOfUsers === null ?\r\n                <h3>All Users</h3> :\r\n                <h3>Last {numberOfUsers} Users</h3>\r\n            }\r\n            <Table size=\"small\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Name</TableCell>\r\n                        <TableCell>Email</TableCell>\r\n                        <TableCell>Last Sign In</TableCell>\r\n                        <TableCell>Created</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {usersList.length === 0 ?\r\n\r\n                        <TableRow>\r\n                            <TableCell key=\"CircularProgress\">\r\n                                <p>Loading users list...</p>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        : usersList.slice(\r\n                            Math.max(\r\n                                usersList.length - (numberOfUsers == null ? usersList.length : numberOfUsers), 0\r\n                            )\r\n                        )\r\n                            .map(user => (\r\n                                <TableRow key={user.uid}>\r\n                                    <TableCell>{user.displayName}</TableCell>\r\n                                    <TableCell>{user.email}</TableCell>\r\n                                    <TableCell>{user.metadata.lastSignInTime}</TableCell>\r\n                                    <TableCell>{user.metadata.creationTime}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                </TableBody>\r\n            </Table>\r\n            <div className={classes.seeMore}>\r\n                {location.pathname === \"/dashboard/users\" ?\r\n                    null :\r\n                    <Link color=\"primary\" component={RouterLink} to=\"/dashboard/users\" >\r\n                        More...\r\n                    </Link>\r\n                }\r\n\r\n            </div>\r\n        </React.Fragment >\r\n    );\r\n}\r\n\r\nexport default Users;","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport 'firebase/functions';\r\nimport 'firebase/firestore';\r\nimport { useFirebaseApp } from 'reactfire';\r\nimport { RemoveCircleOutline } from '@material-ui/icons';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    seeMore: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst Categories = () => {\r\n    const columns = [\r\n        { field: 'id', headerName: 'ID', width: 200 },\r\n        { field: 'name', headerName: 'Category Name', width: 200 },\r\n    ];\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [selection, setSelection] = useState([]);\r\n    const firebase = useFirebaseApp();\r\n    const classes = useStyles();\r\n    const [categoriesList, setCategoriesList] = useState([]);\r\n    const history = useHistory();\r\n    const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n    const [isDeleting, setIsDeleting] = useState(false);\r\n\r\n    const handleDeleteDialogView = () => {\r\n        setDeleteDialogOpen(!deleteDialogOpen);\r\n    }\r\n\r\n\r\n    const deleteCategories = async () => {\r\n        try {\r\n            setIsDeleting(true);\r\n\r\n            selection.map(async category => {\r\n                await firebase.functions().httpsCallable('deleteCategory')({ categoryId: category.id })\r\n                    .then(() => {\r\n\r\n                        return console.log('Category Deleted')\r\n                    }).catch(e => {\r\n                        console.log(e)\r\n                    });\r\n                setDeleteDialogOpen(false);\r\n                fetchCategories();\r\n\r\n            })\r\n\r\n            fetchCategories();\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const fetchCategories = async () => {\r\n\r\n        try {\r\n            setIsLoading(true);\r\n            await firebase.functions().httpsCallable('getAllCategories')()\r\n                .then(async response => {\r\n                    console.log(response.data);\r\n                    await setCategoriesList(response.data);\r\n                }).catch(e => {\r\n                    console.log(e)\r\n                });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        setIsLoading(false);\r\n    }\r\n    const redirectToAdd = () => {\r\n        history.push('/dashboard/Category/Add')\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        fetchCategories();\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div style={{ display: 'flex', paddingLeft: 10 }}>\r\n                <h3 style={{ flexGrow: 1 }}>Categories</h3>\r\n                {selection.length !== 0 ? <IconButton onClick={handleDeleteDialogView}><RemoveCircleOutline /></IconButton> : null}\r\n                <IconButton onClick={redirectToAdd}><AddIcon /></IconButton>\r\n            </div>\r\n\r\n\r\n            <div style={{ height: 400, width: '100%' }}>\r\n                <DataGrid\r\n                    disableSelectionOnClick\r\n                    rows={categoriesList}\r\n                    columns={columns}\r\n                    pageSize={5}\r\n                    checkboxSelection\r\n                    loading={isLoading}\r\n                    onSelectionChange={(newSelection) => {\r\n                        setSelection(newSelection.rows)\r\n                    }} />\r\n            </div>\r\n\r\n\r\n\r\n            <div className={classes.seeMore}>\r\n\r\n            </div>\r\n\r\n            <Dialog\r\n                open={deleteDialogOpen}\r\n                onClose={handleDeleteDialogView}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{`Delete selected Categories?`}</DialogTitle>\r\n                <DialogContent>\r\n                    {isDeleting ?\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            <div style={{ display: 'flex' }}>\r\n                                <CircularProgress />\r\n                                Deleting category...\r\n                            </div>\r\n\r\n                        </DialogContentText>\r\n                        : <DialogContentText id=\"alert-dialog-description\">\r\n                            You can't undo changes.\r\n                        </DialogContentText>\r\n                    }\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleDeleteDialogView} color=\"primary\">\r\n                        Cancel\r\n          </Button>\r\n                    <Button onClick={deleteCategories} color=\"primary\" autoFocus>\r\n                        Delete\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n        </React.Fragment >\r\n    );\r\n}\r\n\r\nexport default Categories;","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionActions from '@material-ui/core/AccordionActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport { RemoveCircleOutline } from '@material-ui/icons';\r\nimport 'firebase/functions';\r\nimport { useFirebaseApp } from 'reactfire';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    seeMore: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n}));\r\n\r\n\r\n\r\nconst Tasks = () => {\r\n\r\n    const classes = useStyles();\r\n    const firebase = useFirebaseApp();\r\n    const history = useHistory();\r\n    const [selection, setSelection] = useState([]);\r\n    const [isDeleting, setIsDeleting] = useState(false);\r\n    const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n    const { categoryName, categoryId } = useParams();\r\n    const [tasksList, setTasksList] = useState([]);\r\n    const [taskName, setTaskName] = useState('');\r\n    const [taskId, setTaskId] = useState('');\r\n\r\n    const handleDeleteDialogView = () => {\r\n        setDeleteDialogOpen(!deleteDialogOpen);\r\n    }\r\n\r\n    const deleteTask = async () => {\r\n        try {\r\n            setIsDeleting(true);\r\n            await firebase.functions().httpsCallable('deleteTask')({ categoryId: categoryId, taskId: taskId })\r\n                .then(() => {\r\n\r\n                    return console.log('Task Deleted')\r\n                }).catch(e => {\r\n                    console.log(e)\r\n                });\r\n            setDeleteDialogOpen(false);\r\n\r\n            fetchTasks()\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n\r\n    const fetchTasks = async () => {\r\n        try {\r\n            await firebase.functions().httpsCallable('getAllTasks')({ categoryId: categoryId })\r\n                .then(response => {\r\n                    console.log(response.data);\r\n                    setTasksList(response.data);\r\n                }).catch(e => {\r\n                    console.log(e)\r\n                });\r\n\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchTasks();\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div style={{ display: 'flex' }}>\r\n                <h3 style={{ flexGrow: 1 }}>{categoryName}</h3>\r\n                {selection.length !== 0 ? <IconButton onClick={handleDeleteDialogView}><RemoveCircleOutline /></IconButton> : null}\r\n                <IconButton onClick={() => { history.push(`/dashboard/Category/${categoryName}/${categoryId}/Edit`) }}><EditIcon /></IconButton>\r\n                <IconButton onClick={() => { history.push(`/dashboard/Category/${categoryName}/${categoryId}/Task/Add`) }}><AddIcon /></IconButton>\r\n\r\n            </div>\r\n\r\n            <div style={{ height: 400, width: '100%' }}>\r\n                {tasksList.length === 0 ? \"No Tasks\"\r\n                    : tasksList.map(task => (\r\n\r\n\r\n                        <Accordion key={task.id}>\r\n                            <AccordionSummary\r\n                                expandIcon={<ExpandMoreIcon />}\r\n                                aria-controls=\"panel1c-content\"\r\n                                id=\"panel1c-header\"\r\n                            >\r\n                                <Typography className={classes.heading}>{task.name}</Typography>\r\n\r\n                            </AccordionSummary>\r\n                            <AccordionDetails >\r\n                                <div />\r\n\r\n\r\n                                <Typography variant=\"caption\">\r\n                                    {task.description}\r\n\r\n                                </Typography>\r\n\r\n                            </AccordionDetails>\r\n                            <Divider />\r\n                            <AccordionActions>\r\n                                <Button onClick={() => {\r\n                                    setTaskName(task.name);\r\n                                    setTaskId(task.id);\r\n                                    handleDeleteDialogView();\r\n                                }}\r\n                                    size=\"small\">Delete</Button>\r\n                                <Button onClick={() => { history.push(`/dashboard/Category/${categoryName}/${categoryId}/Task/${task.id}/Edit`) }} size=\"small\" color=\"primary\">\r\n                                    Edit\r\n                            </Button>\r\n                            </AccordionActions>\r\n                        </Accordion>\r\n\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <div className={classes.seeMore}>\r\n\r\n            </div>\r\n\r\n\r\n            <Dialog\r\n                open={deleteDialogOpen}\r\n                onClose={handleDeleteDialogView}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{`Delete task ${taskName}?`}</DialogTitle>\r\n                <DialogContent>\r\n                    {isDeleting ?\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            <div style={{ display: 'flex' }}>\r\n                                <CircularProgress />\r\n                                Deleting...\r\n                            </div>\r\n\r\n                        </DialogContentText>\r\n                        : <DialogContentText id=\"alert-dialog-description\">\r\n                            You can't undo changes.\r\n                        </DialogContentText>\r\n                    }\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleDeleteDialogView} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={deleteTask} color=\"primary\" autoFocus>\r\n                        Delete\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </React.Fragment >\r\n    );\r\n}\r\n\r\nexport default Tasks;","import React from 'react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\r\n\r\n// Generate Sales Data\r\nconst createData = (time, amount) => {\r\n    return { time, amount };\r\n}\r\n\r\nconst data = [\r\n    createData('00:00', 0),\r\n    createData('03:00', 300),\r\n    createData('06:00', 600),\r\n    createData('09:00', 800),\r\n    createData('12:00', 1500),\r\n    createData('15:00', 2000),\r\n    createData('18:00', 2400),\r\n    createData('21:00', 2400),\r\n    createData('24:00', undefined),\r\n];\r\n\r\nconst Chart = () => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h3>Today</h3>\r\n            <ResponsiveContainer>\r\n                <LineChart\r\n                    data={data}\r\n                    margin={{\r\n                        top: 16,\r\n                        right: 16,\r\n                        bottom: 0,\r\n                        left: 24,\r\n                    }}\r\n                >\r\n                    <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\r\n                    <YAxis stroke={theme.palette.text.secondary}>\r\n                        <Label\r\n                            angle={270}\r\n                            position=\"left\"\r\n                            style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}\r\n                        >\r\n                            Sales ($)\r\n                    </Label>\r\n                    </YAxis>\r\n                    <Line type=\"monotone\" dataKey=\"amount\" stroke={theme.palette.primary.main} dot={false} />\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Chart;","import React, { useEffect, useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useFirebaseApp } from 'reactfire';\r\n\r\nconst AddCategory = () => {\r\n    const history = useHistory();\r\n    const [categoryName, setCategoryName] = useState('');\r\n    const [alert, setAlert] = useState('');\r\n    const firebase = useFirebaseApp();\r\n\r\n\r\n    const addCategory = async () => {\r\n        try {\r\n            if (categoryName === \"\") {\r\n                setAlert('emptyName')\r\n                return \"\";\r\n            }\r\n            await firebase.functions().httpsCallable('addCategory')({ name: categoryName })\r\n                .then(() => {\r\n                    console.log('Added')\r\n                    history.push('/dashboard/Categories')\r\n                }).catch(e => {\r\n                    setAlert('error')\r\n                    return console.log(e)\r\n                })\r\n        } catch (e) {\r\n            console.log(`Error adding Category: ${e}`)\r\n            console.log(categoryName)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(categoryName)\r\n    }, [categoryName])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h3>Add Category</h3>\r\n            {alert === 'success' ? <Alert severity=\"success\">Category Added Successfully!</Alert>\r\n                : alert === 'emptyName' ? <Alert severity=\"error\">Category name cannot be empty!</Alert> :\r\n                    alert === 'error' ? <Alert severity=\"error\">Error!</Alert> : null}\r\n\r\n            <TextField id=\"outlined-basic\" label=\"Category name\" variant=\"outlined\" fullWidth onChange={(e) => {\r\n                setCategoryName(e.target.value)\r\n            }} required />\r\n            <Box pt={4}>\r\n            </Box>\r\n            <Button type=\"submit\" onClick={addCategory} fullWidth variant=\"contained\" color=\"primary\" startIcon={<AddIcon />}>\r\n                Add Category\r\n                </Button>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default AddCategory;","import React, { useEffect, useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Button from '@material-ui/core/Button';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useFirebaseApp } from 'reactfire';\r\n\r\nconst EditCategory = () => {\r\n    const history = useHistory();\r\n    const { categoryName, categoryId } = useParams();\r\n    const [newCategoryName, setNewCategoryName] = useState(categoryName);\r\n    const [alert, setAlert] = useState('');\r\n    const firebase = useFirebaseApp();\r\n\r\n\r\n    const editCategory = async () => {\r\n        try {\r\n            if (newCategoryName === \"\") {\r\n                setAlert('emptyName')\r\n                return \"\";\r\n            }\r\n            await firebase.functions().httpsCallable('editCategory')({ name: newCategoryName, categoryId: categoryId })\r\n                .then(() => {\r\n                    console.log('Edited')\r\n                    history.push('/dashboard/Categories')\r\n                }).catch(e => {\r\n                    setAlert('error')\r\n                    return console.log(e)\r\n                })\r\n        } catch (e) {\r\n            console.log(`Error editing Category: ${e}`)\r\n            console.log(newCategoryName)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(newCategoryName)\r\n    }, [newCategoryName])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h3>Edit Category</h3>\r\n            {alert === 'success' ? <Alert severity=\"success\">Changes Saved Successfully!</Alert>\r\n                : alert === 'emptyName' ? <Alert severity=\"error\">Category name cannot be empty!</Alert> :\r\n                    alert === 'error' ? <Alert severity=\"error\">Error!</Alert> : null}\r\n\r\n            <TextField id=\"outlined-basic\" label=\"Category name\" variant=\"outlined\" value={newCategoryName} fullWidth onChange={(e) => {\r\n                setNewCategoryName(e.target.value)\r\n            }} required />\r\n            <Box pt={4}>\r\n            </Box>\r\n            <Button type=\"submit\" onClick={editCategory} fullWidth variant=\"contained\" color=\"primary\" startIcon={<SaveIcon />}>\r\n                Svae\r\n                </Button>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default EditCategory;","import React, { useEffect, useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useFirebaseApp } from 'reactfire';\r\n\r\nconst AddCategory = () => {\r\n    const history = useHistory();\r\n    const { categoryName, categoryId } = useParams();\r\n    const [taskName, setTaskName] = useState('');\r\n    const [taskDescription, setTaskDescription] = useState('');\r\n    const [alert, setAlert] = useState('');\r\n    const firebase = useFirebaseApp();\r\n\r\n\r\n    const addTask = async () => {\r\n        try {\r\n            if (taskName === \"\" || taskDescription === \"\") {\r\n                setAlert('emptyField')\r\n                return \"\";\r\n            }\r\n            await firebase.functions().httpsCallable('addTask')({ categoryId: categoryId, name: taskName, description: taskDescription })\r\n                .then(() => {\r\n                    console.log('Added')\r\n                    history.push(`/dashboard/Category/${categoryName}/${categoryId}`)\r\n                }).catch(e => {\r\n                    setAlert('error')\r\n                    return console.log(e)\r\n                })\r\n        } catch (e) {\r\n            console.log(`Error adding Category: ${e}`)\r\n            console.log(taskName)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"Name: \", taskName)\r\n        console.log(\"Description: \", taskDescription)\r\n    }, [taskName, taskDescription])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h3>Add Task</h3>\r\n            {alert === 'success' ? <Alert severity=\"success\">Task Added Successfully!</Alert>\r\n                : alert === 'emptyField' ? <Alert severity=\"error\">Task name/description cannot be empty!</Alert> :\r\n                    alert === 'error' ? <Alert severity=\"error\">Error!</Alert> : null}\r\n\r\n            <TextField id=\"outlined-basic\" label=\"Task name\" variant=\"outlined\" fullWidth onChange={(e) => {\r\n                setTaskName(e.target.value)\r\n            }} required />\r\n            <Box pt={4}>\r\n            </Box>\r\n            <TextField id=\"outlined-basic\" label=\"Description\" variant=\"outlined\" fullWidth onChange={(e) => {\r\n                setTaskDescription(e.target.value)\r\n            }} required />\r\n            <Box pt={4}>\r\n            </Box>\r\n            <Button type=\"submit\" onClick={addTask} fullWidth variant=\"contained\" color=\"primary\" startIcon={<AddIcon />}>\r\n                Add Task\r\n                </Button>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default AddCategory;","import React, { useEffect, useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Button from '@material-ui/core/Button';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { useFirebaseApp } from 'reactfire';\r\n\r\n\r\nconst EditTask = () => {\r\n    const history = useHistory();\r\n    const { categoryName, categoryId, taskName, taskId } = useParams();\r\n    const [newTaskName, setNewTaskName] = useState('');\r\n    const [newTaskDescription, setNewTaskDescription] = useState('');\r\n    const [alert, setAlert] = useState('');\r\n    const firebase = useFirebaseApp();\r\n\r\n\r\n    const editTask = async () => {\r\n        try {\r\n            if (newTaskName === \"\" || newTaskDescription === \"\") {\r\n                setAlert('emptyField')\r\n                return \"\";\r\n            }\r\n            await firebase.functions().httpsCallable('editTask')({ name: newTaskName, description: newTaskDescription, categoryId: categoryId, taskId: taskId })\r\n                .then(() => {\r\n                    console.log('Edited')\r\n                    history.push(`/dashboard/Category/${categoryName}/${categoryId}`)\r\n                }).catch(e => {\r\n                    setAlert('error')\r\n                    return console.log(e)\r\n                })\r\n        } catch (e) {\r\n            console.log(`Error editing Category: ${e}`)\r\n\r\n        }\r\n    }\r\n\r\n    const getTask = async () => {\r\n        try {\r\n            await firebase.functions().httpsCallable('getTask')({ categoryId: categoryId, taskId: taskId })\r\n                .then(response => {\r\n                    setNewTaskName(response.data.name);\r\n                    setNewTaskDescription(response.data.description);\r\n                    console.log(response)\r\n                })\r\n        } catch (e) {\r\n            setAlert('error')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTask();\r\n    }, [])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h3>Edit Task {taskName}</h3>\r\n            {alert === 'success' ? <Alert severity=\"success\">Changes Saved Successfully!</Alert>\r\n                : alert === 'emptyField' ? <Alert severity=\"error\">Category name/description cannot be empty!</Alert> :\r\n                    alert === 'error' ? <Alert severity=\"error\">Error!</Alert> : null}\r\n\r\n            <TextField id=\"outlined-basic\" label=\"Task name\" variant=\"outlined\" value={newTaskName} fullWidth onChange={(e) => {\r\n                setNewTaskName(e.target.value)\r\n            }} required />\r\n            <Box pt={4}>\r\n            </Box>\r\n            <TextField id=\"outlined-basic\" label=\"Task description\" variant=\"outlined\" value={newTaskDescription} fullWidth onChange={(e) => {\r\n                setNewTaskDescription(e.target.value)\r\n            }} required />\r\n            <Box pt={4}>\r\n            </Box>\r\n            <Button type=\"submit\" onClick={editTask} fullWidth variant=\"contained\" color=\"primary\" startIcon={<SaveIcon />}>\r\n                Svae\r\n                </Button>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default EditTask;","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { MainListItems } from './listItems';\r\nimport Logout from '../Authentication/Logout';\r\nimport Users from './Users';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Categories from './Categories';\r\nimport Tasks from './Tasks'\r\nimport Chart from './Chart'\r\nimport AddCategory from './AddCategory';\r\nimport EditCategory from './EditCategory';\r\nimport AddTask from './AddTask'\r\nimport EditTask from './EditTask'\r\n\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n}));\r\n\r\nconst Dashboard = () => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleDrawer = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n                <Toolbar className={classes.toolbar}>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawer}\r\n                        className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                        TimeApp Admin Dashboard\r\n                    </Typography>\r\n\r\n                    <IconButton color=\"inherit\">\r\n                        <Badge badgeContent={4} color=\"secondary\">\r\n                            <NotificationsIcon />\r\n                        </Badge>\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n                }}\r\n                open={open}\r\n            >\r\n                <div className={classes.toolbarIcon}>\r\n                    <IconButton onClick={handleDrawer}>\r\n                        <ChevronLeftIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    <MainListItems />\r\n                </List>\r\n                <Divider />\r\n                <List>\r\n                    <Logout />\r\n                </List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer} />\r\n\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <Grid container spacing={3}>\r\n                        <Switch>\r\n                            <Route exact path=\"/dashboard\">\r\n                                {/* List Number of Users*/}\r\n                                <Grid item xs={12}>\r\n                                    <Paper className={classes.paper}>\r\n                                        <Users numberOfUsers={2} />\r\n                                    </Paper>\r\n                                </Grid>\r\n                            </Route>\r\n                            <Route exact path=\"/dashboard/users\">\r\n                                {/* List  All Users*/}\r\n                                <Grid item xs={12}>\r\n                                    <Paper className={classes.paper}>\r\n                                        <Users />\r\n                                    </Paper>\r\n                                </Grid>\r\n                            </Route>\r\n                            <Route exact path=\"/dashboard/categories\">\r\n                                {/* List Categories */}\r\n                                <Grid item xs={12}>\r\n                                    <Paper className={classes.paper}>\r\n                                        <Categories />\r\n                                    </Paper>\r\n                                </Grid>\r\n                            </Route>\r\n\r\n\r\n                            <Route exact path=\"/dashboard/Category/:categoryName/:categoryId\">\r\n                                {/* List Tasks*/}\r\n                                <Grid item xs={12}>\r\n                                    <Paper className={classes.paper}>\r\n                                        <Tasks />\r\n                                    </Paper>\r\n                                </Grid>\r\n                            </Route>\r\n\r\n                            <Route exact path=\"/dashboard/Category/Add\">\r\n                                {/* Add Category*/}\r\n                                <Grid item xs={12}>\r\n                                    <Paper className={classes.paper}>\r\n                                        <AddCategory />\r\n                                    </Paper>\r\n                                </Grid>\r\n                            </Route>\r\n\r\n                            <Route exact path=\"/dashboard/Category/:categoryName/:categoryId/Edit\">\r\n                                {/* Edit Category*/}\r\n                                <Grid item xs={12}>\r\n                                    <Paper className={classes.paper}>\r\n                                        <EditCategory />\r\n                                    </Paper>\r\n                                </Grid>\r\n                            </Route>\r\n\r\n                            <Route exact path=\"/dashboard/Category/:categoryName/:categoryId/Task/Add\">\r\n                                {/* Add Task*/}\r\n                                <Grid item xs={12}>\r\n                                    <Paper className={classes.paper}>\r\n                                        <AddTask />\r\n                                    </Paper>\r\n                                </Grid>\r\n                            </Route>\r\n                            <Route exact path=\"/dashboard/Category/:categoryName/:categoryId/Task/:taskId/Edit\">\r\n                                {/* Edit Task*/}\r\n                                <Grid item xs={12}>\r\n                                    <Paper className={classes.paper}>\r\n                                        <EditTask />\r\n                                    </Paper>\r\n                                </Grid>\r\n                            </Route>\r\n\r\n\r\n\r\n\r\n                        </Switch>\r\n                    </Grid>\r\n                    {/*Chart */}\r\n                    <Grid item xs={12}>\r\n                        <Paper className={classes.paper}>\r\n                            <Chart />\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Box pt={4}>\r\n                    </Box>\r\n                </Container>\r\n\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\nimport { SuspenseWithPerf, AuthCheck } from 'reactfire';\nimport Signup from './Components/Authentication/Signup';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport SignIn from './Components/Authentication/Signin';\nimport Dashboard from './Components/Dashboard/Dashboard'\nimport CustomCircularProgress from './Components/CustomCircularProgress'\n// \n\nfunction App() {\n\n\n\n  return (\n    <div className=\"App\">\n      <SuspenseWithPerf\n        fallback={<CustomCircularProgress />}\n      >\n\n        <Router>\n          <Route exact path='/' >\n            <AuthCheck fallback={<SignIn />}>\n\n              <Redirect to=\"/dashboard\" />\n\n            </AuthCheck>\n          </Route>\n          <Route exact path='/signup'>\n            <AuthCheck fallback={<Signup />}>\n              <Redirect to=\"/dashboard\" />\n            </AuthCheck>\n          </Route>\n\n          <Route path='/dashboard/:page?'>\n            <AuthCheck fallback={<SignIn />}>\n              <Dashboard />\n            </AuthCheck>\n          </Route>\n\n\n\n        </Router>\n\n      </SuspenseWithPerf>\n    </div >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const firebaseConfig = {\r\n    apiKey: \"AIzaSyCUnFS8G8h95ttHStW-eKv3VnDrLfsGJao\",\r\n    authDomain: \"timetracker-cf86b.firebaseapp.com\",\r\n    databaseURL: \"https://timetracker-cf86b.firebaseio.com\",\r\n    projectId: \"timetracker-cf86b\",\r\n    storageBucket: \"timetracker-cf86b.appspot.com\",\r\n    messagingSenderId: \"599822167555\",\r\n    appId: \"1:599822167555:web:b60a4cc46b24c0e3096836\"\r\n};\r\n\r\nexport default firebaseConfig;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { FirebaseAppProvider } from 'reactfire';\nimport firebaseConfig from './Components/Authentication/firebaseConfig';\n\n\n\n\nReactDOM.render(\n  <FirebaseAppProvider firebaseConfig={firebaseConfig}>\n    <React.StrictMode>\n\n\n      <App />\n\n    </React.StrictMode>,\n   </FirebaseAppProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}